DONE carrots 	Kattis - carrots 	1.3a, I/O + Sequence Only 	just print P
DONE faktor 	Kattis - faktor 	1.3a, I/O + Sequence Only 	just print (I-1)*A + 1
DONE hello 	Kattis - hello 	1.3a, I/O + Sequence Only 	just print 'Hello World!'
DONE moscowdream 	Kattis - moscowdream 	1.3a, I/O + Sequence Only 	do not forget to test n â‰¥ 3
DONE different 	Kattis - different 	1.3b, Selection Only 	simple; just be careful of long long
DONE eligibility 	Kattis - eligibility 	1.3b, Selection Only 	simple if-else checks
DONE judgingmoose 	Kattis - judgingmoose 	1.3b, Selection Only 	if-else
DONE leftbeehind 	Kattis - leftbeehind 	1.3b, Selection Only 	just 4 different cases
DONE drinkingsong 	Kattis - drinkingsong 	1.3c, Repetition Only 	just one loop; but be careful of with the grammar
DONE mosquito 	Kattis - mosquito 	1.3c, Repetition Only 	direct simulation
DONE tarifa 	Kattis - tarifa 	1.3c, Repetition Only 	one pass; array not needed
DONE timeloop 	Kattis - timeloop 	1.3c, Repetition Only 	just print 'num Abracadabra' N times
DONE acm 	Kattis - acm 	1.3d, Control Flow 	simple simulation; one pass
DONE licensetolaunch 	Kattis - licensetolaunch 	1.3d, Control Flow 	easy linear pass
DONE oddgnome 	Kattis - oddgnome 	1.3d, Control Flow 	linear pass
DONE statistics 	Kattis - statistics 	1.3d, Control Flow 	one pass; array not needed
DONE artichoke 	Kattis - artichoke 	1.3e, Function 	LA 7150 - WorldFinals Marrakech15; linear scan; probably one of the easiest WorldFinals problem; also available at UVa 01709
DONE combinationlock 	Kattis - combinationlock 	1.3e, Function 	simple; do as asked; also available at UVa 10550 - Combination Lock
DONE digits 	Kattis - digits 	1.3e, Function 	direct simulation; also available at UVa 11687 - Digits
DONE mia 	Kattis - mia 	1.3e, Function 	just if-else check
DONE armystrengthhard 	Kattis - armystrengthhard 	1.3f, Easy 	also see Kattis - armystrengtheasy; re-read the problem statement several times to unveil a trivial solution
DONE batterup 	Kattis - batterup 	1.3f, Easy 	easy one loop
DONE hissingmicrophone 	Kattis - hissingmicrophone 	1.3f, Easy 	simple loop
pokerhand 	Kattis - pokerhand 	1.3f, Easy 	frequency count; report max
bossbattle 	Kattis - bossbattle 	1.3g, Still Easy 	trick question
bubbletea 	Kattis - bubbletea 	1.3g, Still Easy 	simple simulation
peasoup 	Kattis - peasoup 	1.3g, Still Easy 	one linear pass
vote 	Kattis - vote 	1.3g, Still Easy 	follow the requirements
battlesimulation 	Kattis - battlesimulation 	1.3h, Medium 	one pass; special check on 3! = 6 possible combinations of 3 combo moves
bitsequalizer 	Kattis - bitsequalizer 	1.3h, Medium 	analyzing patterns; also available at UVa 12545 - Bits Equalizer
fastfood 	Kattis - fastfood 	1.3h, Medium 	eventually just one pass due to the constraints
bela 	Kattis - bela 	1.4a, Game (Card) 	simple card scoring problem
memorymatch 	Kattis - memorymatch 	1.4a, Game (Card) 	interesting simulation game; many corner cases
shuffling 	Kattis - shuffling 	1.4a, Game (Card) 	simulate card shuffling operation
chess 	Kattis - chess 	1.4b, Game (Chess) 	bishop movements; either impossible, 0, 1, or 2 ways - one of this can be invalid; just use brute force
empleh 	Kattis - empleh 	1.4b, Game (Chess) 	the reverse problem of Kattis - helpme
helpme 	Kattis - helpme 	1.4b, Game (Chess) 	convert the given chess board into chess notation
connectthedots 	Kattis - connectthedots 	1.4c, Game (Others), Easier 	classic children game; output formatting
gamerank 	Kattis - gamerank 	1.4c, Game (Others), Easier 	simulate the ranking update process
guessinggame 	Kattis - guessinggame 	1.4c, Game (Others), Easier 	use a 1D flag array; also available at UVa 10530 - Guessing Game
battleship 	Kattis - battleship 	1.4d, Game (Others), Harder 	simulation; reading comprehension; many corner cases
rockpaperscissors 	Kattis - rockpaperscissors 	1.4d, Game (Others), Harder 	count wins and losses; output win average; also available at UVa 10903 - Rock-Paper-Scissors ...
tictactoe2 	Kattis - tictactoe2 	1.4d, Game (Others), Harder 	check validity of Tic Tac Toe game; tricky; also available at UVa 10363 - Tic Tac Toe
turtlemaster 	Kattis - turtlemaster 	1.4d, Game (Others), Harder 	interesting board game to teach programming for children; simulation
chopin 	Kattis - chopin 	1.4e, Real Life, Easier 	you can learn a bit of music with this problem
compass 	Kattis - compass 	1.4e, Real Life, Easier 	your typical smartphone's compass function usually has this small feature
trainpassengers 	Kattis - trainpassengers 	1.4e, Real Life, Easier 	create a verifier; be careful of corner cases
wertyu 	Kattis - wertyu 	1.4e, Real Life, Easier 	use 2D mapper array to simplify the problem; also available at UVa 10082 - WERTYU
beatspread 	Kattis - beatspread 	1.4f, Real Life, Medium 	be careful with boundary cases!; also available at UVa 10812 - Beat the Spread
luhnchecksum 	Kattis - luhnchecksum 	1.4f, Real Life, Medium 	very similar (~95%) to UVa 11743
toilet 	Kattis - toilet 	1.4f, Real Life, Medium 	simulation; be careful of corner cases
wordcloud 	Kattis - wordcloud 	1.4f, Real Life, Medium 	just a simulation; but be careful of corner cases
creditcard 	Kattis - creditcard 	1.4g, Real Life, Harder 	real life issue; precision error issue if we do not convert double (with just 2 digits after decimal point) into long long
touchscreenkeyboard 	Kattis - touchscreenkeyboard 	1.4g, Real Life, Harder 	follow the requirements; sort
workout 	Kattis - workout 	1.4g, Real Life, Harder 	gym simulation; use 1D arrays to help you simulate the time quickly
friday 	Kattis - friday 	1.4h, Time, Easier 	the answer depends on the start day of the month
justaminute 	Kattis - justaminute 	1.4h, Time, Easier 	linear pass; total seconds/(total minutes*60)
marswindow 	Kattis - marswindow 	1.4h, Time, Easier 	simple advancing of year and month by 26 months or 2 years+2 months each; direct formula exists
savingdaylight 	Kattis - savingdaylight 	1.4h, Time, Easier 	convert hh:mm to minute; compute difference of ending and starting; then convert minute to hh:mm again
busyschedule 	Kattis - busyschedule 	1.4i, Time, Harder 	sort the time; be careful of corner cases
dst 	Kattis - dst 	1.4i, Time, Harder 	straightforward; modulo
semafori 	Kattis - semafori 	1.4i, Time, Harder 	simple simulation
timezones 	Kattis - timezones 	1.4i, Time, Harder 	follow the description, tedious; also available at UVa 10371 - Time Zones
asciiaddition 	Kattis - asciiaddition 	1.4j, Time Waster, Easier 	a+b problem in text format; total gimmick; time waster
glitchbot 	Kattis - glitchbot 	1.4j, Time Waster, Easier 	time waster; O(n^2) simulation; do not output more than one possible answer
pachydermpeanutpacking 	Kattis - pachydermpeanutpacking 	1.4j, Time Waster, Easier 	time waster; simple one loop simulation
printingcosts 	Kattis - printingcosts 	1.4j, Time Waster, Easier 	clear time waster; the hard part is in parsing the costs of each character in the problem description
froggie 	Kattis - froggie 	1.4k, Time Waster, Harder 	just a simulation; but many corner cases; S can be 0
functionalfun 	Kattis - functionalfun 	1.4k, Time Waster, Harder 	just follow the description; 5 cases; tedious parsing problem; requires a kind of mapper
windows 	Kattis - windows 	1.4k, Time Waster, Harder 	LA 7162 - WorldFinals Marrakech15; tedious simulation problem; also available at UVa 01721 - Window Manager
baloni 	Kattis - baloni 	2.2a, 1D Array, Easier 	clever use of 1D histogram array to decompose the shots as per requirement
downtime 	Kattis - downtime 	2.2a, 1D Array, Easier 	1D array; use Fenwick Tree-like operation for Range Update Point Query
greedilyincreasing 	Kattis - greedilyincreasing 	2.2a, 1D Array, Easier 	just 1D array manipulation; this is not the DP-LIS problem
jollyjumpers 	Kattis - jollyjumpers 	2.2a, 1D Array, Easier 	1D Boolean flags to check [1..n-1]; also available at UVa 10038 - Jolly Jumpers
divideby100 	Kattis - divideby100 	2.2b, 1D Array, Harder 	big 1D character array processing; be careful
mastermind 	Kattis - mastermind 	2.2b, 1D Array, Harder 	1D array manipulation to count r and s
pivot 	Kattis - pivot 	2.2b, 1D Array, Harder 	static range min/max query problem; special condition allows this problem to be solvable in O(n) using help of 1D arrays
epigdanceoff 	Kattis - epigdanceoff 	2.2c, 2D Array, Easier 	count number of CCs on 2D grid; simpler solution exists: count the number of blank columns plus one
flowshop 	Kattis - flowshop 	2.2c, 2D Array, Easier 	interesting 2D array manipulation
imageprocessing 	Kattis - imageprocessing 	2.2c, 2D Array, Easier 	interesting 2D array manipulation
nineknights 	Kattis - nineknights 	2.2c, 2D Array, Easier 	2D array checks; 8 directions
2048 	Kattis - 2048 	2.2d, 2D Array, Harder 	just a 2D array manipulation problem; utilize symmetry using 90 degrees rotation(s) to reduce 4 cases into 1
flagquiz 	Kattis - flagquiz 	2.2d, 2D Array, Harder 	array of array of strings; be careful; duplicates may exists
funhouse 	Kattis - funhouse 	2.2d, 2D Array, Harder 	2D array manipulation; note the direction update
rings2 	Kattis - rings2 	2.2d, 2D Array, Harder 	more challenging 2D array manipulation; special output formatting style
cups 	Kattis - cups 	2.2e, Sorting, Easier 	a bit of string parsing; sort
lineup 	Kattis - lineup 	2.2e, Sorting, Easier 	sort ascending/descending and compare
mjehuric 	Kattis - mjehuric 	2.2e, Sorting, Easier 	a direct simulation of a bubble sort algorithm
sidewayssorting 	Kattis - sidewayssorting 	2.2e, Sorting, Easier 	stable_sort or sort multi-fields of columns of a 2D array; ignore case
classy 	Kattis - classy 	2.2f, Sorting, Harder 	sort using modified comparison function; a bit of string parsing/tokenization
dyslectionary 	Kattis - dyslectionary 	2.2f, Sorting, Harder 	sort the reverse of original string; output formatting
musicyourway 	Kattis - musicyourway 	2.2f, Sorting, Harder 	stable_sort; custom comparison function
sortofsorting 	Kattis - sortofsorting 	2.2f, Sorting, Harder 	stable_sort or sort multi-fields
bitbybit 	Kattis - bitbybit 	2.2g, Bit Manipulation 	be very careful with and + or corner cases
deathstar 	Kattis - deathstar 	2.2g, Bit Manipulation 	can be solved with bit manipulation
snapperhard 	Kattis - snapperhard 	2.2g, Bit Manipulation 	bit manipulation; find the pattern; the easier version is also available at Kattis - snappereasy
evenup 	Kattis - evenup 	2.2h, Stack 	use stack to solve this problem
pairingsocks 	Kattis - pairingsocks 	2.2h, Stack 	simulation using two stacks; just do as asked
restaurant 	Kattis - restaurant 	2.2h, Stack 	simulation with stack-based concept; drop plates at stack 2 (LIFO); use move 2-$gt;1 to reverse order; take from stack 1 (FIFO)
throwns 	Kattis - throwns 	2.2h, Stack 	use stack of egg positions to help with the undo operation; be careful of corner cases involving modulo operation
coconut 	Kattis - coconut 	2.2i, List/Queue/Deque 	maintain a circular linked list of hand symbols; variant of Josephus problem; other solution exists
integerlists 	Kattis - integerlists 	2.2i, List/Queue/Deque 	use deque for fast deletion from front (normal) & back (reversed list); use stack to reverse the final list if it is reversed at the end
joinstrings 	Kattis - joinstrings 	2.2i, List/Queue/Deque 	all '+' operations must be O(1)
teque 	Kattis - teque 	2.2i, List/Queue/Deque 	all operations must be O(1)
guessthedatastructure 	Kattis - guessthedatastructure 	2.3a, Priority Queue 	stack, queue, and priority_queue; also available at UVa 11995 - I Can Guess ...
knigsoftheforest 	Kattis - knigsoftheforest 	2.3a, Priority Queue 	PQ simulation after sorting the entries by year
numbertree 	Kattis - numbertree 	2.3a, Priority Queue 	not a direct priority queue problem, but the indexing strategy is similar to binary heap indexing
stockprices 	Kattis - stockprices 	2.3a, Priority Queue 	PQ simulation; both max and min PQ
bookingaroom 	Kattis - bookingaroom 	2.3b, Direct Addressing Table 	only 100 rooms; use 1D Boolean array
hardware 	Kattis - hardware 	2.3b, Direct Addressing Table 	parsing is tedious; count the frequency of digits
quickbrownfox 	Kattis - quickbrownfox 	2.3b, Direct Addressing Table 	pangram; frequency counting of 26 alphabets
cd 	Kattis - cd 	2.3c, Hash Table (set) 	unordered_set is faster than set here; or use modified merge as the input is sorted; also available at UVa 11849 - CD
esej 	Kattis - esej 	2.3c, Hash Table (set) 	use unordered_set to prevent duplicate
everywhere 	Kattis - everywhere 	2.3c, Hash Table (set) 	use unordered_set
greetingcard 	Kattis - greetingcard 	2.3c, Hash Table (set) 	use unordered_set; good question; major hint: only 12 neighbors
basicinterpreter 	Kattis - basicinterpreter 	2.3d, Hash Table (map) 	the harder version of Kattis - variablearithmetic; tedious; needs to be very careful; print string inside double quotes verbatim
conformity 	Kattis - conformity 	2.3d, Hash Table (map) 	use unordered_map to count frequencies of the sorted permutations of 5 ids; also available at UVa 11286 - Conformity
grandpabernie 	Kattis - grandpabernie 	2.3d, Hash Table (map) 	use unordered_map plus (sorted) vector
recount 	Kattis - recount 	2.3d, Hash Table (map) 	use map; frequency counting
bst 	Kattis - bst 	2.3e, Balanced BST (set) 	simulate special BST [1..N] insertions using set
candydivision 	Kattis - candydivision 	2.3e, Balanced BST (set) 	complete search from 1 to sqrt(N); insert all divisors into set for automatic sorting and elimination of duplicates
compoundwords 	Kattis - compoundwords 	2.3e, Balanced BST (set) 	use set extensively; iterator
administrativeproblems 	Kattis - administrativeproblems 	2.3f, Balanced BST (map) 	use several maps as the output (of spy names) has to be sorted; be careful of corner cases
hardwoodspecies 	Kattis - hardwoodspecies 	2.3f, Balanced BST (map) 	use map; sorted output; also available at UVa 10226 - Hardwood Species
kattissquest 	Kattis - kattissquest 	2.3f, Balanced BST (map) 	use map of priority queues; other solutions exist
srednji 	Kattis - srednji 	2.3f, Balanced BST (map) 	go left and right of B; use fast data structure like map to help determine the result fast
abinitio 	Kattis - abinitio 	2.4a, Graph Data Structures 	combo: EL input, AM as working graph DS, AL output (in hash format); all operations must be O(V) or better
chopwood 	Kattis - chopwood 	2.4a, Graph Data Structures 	PrÃ¼fer sequence; use priority_queue
traveltheskies 	Kattis - traveltheskies 	2.4a, Graph Data Structures 	(graph) DS manipulation; an array of ALs (one per each day); simulate the number of people day by day
almostunionfind 	Kattis - almostunionfind 	2.4b, Union-Find Disjoint Sets 	new operation: move; idea: do not destroy the parent array structure; also available at UVa 11987 - Almost Union-Find
control 	Kattis - control 	2.4b, Union-Find Disjoint Sets 	LA 7480 - Singapore15; simulation of UFDS; size of set; number of disjoint sets
ladice 	Kattis - ladice 	2.4b, Union-Find Disjoint Sets 	size of set; decrement one per usage
fenwick 	Kattis - fenwick 	2.4c, Tree-related DS 	basic Fenwick Tree; use long long
moviecollection 	Kattis - moviecollection 	2.4c, Tree-related DS 	LA 5902 - NorthWesternEurope11; not a stack but a dynamic RSQ problem; also available at UVa 01513 - Movie collection
supercomputer 	Kattis - supercomputer 	2.4c, Tree-related DS 	easy problem if we use Fenwick Tree
turbo 	Kattis - turbo 	2.4c, Tree-related DS 	somewhat similar with UVa 01513/Kattis - moviecollection; use DAT (for mapping) and Fenwick Tree (for RSQ)
4thought 	Kattis - 4thought 	3.2a, Pre-calculate-able 	brute force 4^3 possibilities; integer division; pre-calculate
cardtrick2 	Kattis - cardtrick2 	3.2a, Pre-calculate-able 	n <= 13, we can simulate the process using queue and precalculate all 13 possible answers
mancala 	Kattis - mancala 	3.2a, Pre-calculate-able 	we can generate all possible winnable Mancala boards from smaller Mancala boards
blackfriday 	Kattis - blackfriday 	3.2b, Iterative (Two Nested Loops) 	2D nested loops; frequency counting
closestsums 	Kattis - closestsums 	3.2b, Iterative (Two Nested Loops) 	sort and then do O(n^2) pairings; also available at UVa 10487 - Closest Sums
golombrulers 	Kattis - golombrulers 	3.2b, Iterative (Two Nested Loops) 	2D nested loops; additional 1D loops for checking
cudoviste 	Kattis - cudoviste 	3.2c, Three+ Nested Loops, Easier 	4 nested loops; the inner loops is just 2x2; 5 possibilities of crushed cars; skip 2x2 area that contains building
npuzzle 	Kattis - npuzzle 	3.2c, Three+ Nested Loops, Easier 	4 nested loops; easy
set 	Kattis - set 	3.2c, Three+ Nested Loops, Easier 	4 nested loops; easy
calculatingdartscores 	Kattis - calculatingdartscores 	3.2d, Three+ Nested Loops, Harder 	6 nested loops but easy; see if a*i +b*j + c*k == n
lektira 	Kattis - lektira 	3.2d, Three+ Nested Loops, Harder 	2 nested loops to try all 2 cutting points plus 1 more loop to actually do the reversing of sub words
tautology 	Kattis - tautology 	3.2d, Three+ Nested Loops, Harder 	try all 2^5 = 32 values with pruning; also available at UVa 11108 - Tautology
dancerecital 	Kattis - dancerecital 	3.2e, Iterative (Permutation) 	try all R! permutations; compare adjacent routines
dreamer 	Kattis - dreamer 	3.2e, Iterative (Permutation) 	try all 8! permutations of digits; check if the date is valid; output earliest valid date
veci 	Kattis - veci 	3.2e, Iterative (Permutation) 	try all permutations; get the one that is larger than X
geppetto 	Kattis - geppetto 	3.2f, Iterative (Combination) 	try all 2^N subsets of ingredients
squaredeal 	Kattis - squaredeal 	3.2f, Iterative (Combination) 	try all 3! permutations of rectangles and try all 2^3 combinations of rectangle orientations; test figure 1.a and 1.b conditions
zagrade 	Kattis - zagrade 	3.2f, Iterative (Combination) 	try all subsets of bracket pairs to be removed
communication 	Kattis - communication 	3.2g, Try All Possible Answers 	try all possible bytes; apply the bitmask formula
flexible 	Kattis - flexible 	3.2g, Try All Possible Answers 	try all possible answers
islands 	Kattis - islands 	3.2g, Try All Possible Answers 	try all possible subsets; prune the non contiguous ones (only 55 valid bitmasks between [0..1023]); check the 'island' property
walls 	Kattis - walls 	3.2g, Try All Possible Answers 	try whether the answer is 1/2/3/4; or Impossible; use up to 4 nested loops
goodmorning 	Kattis - goodmorning 	3.2h, Backtracking (Easier) 	we can use backtracking to generate all possible (small) numbers that can be pressed according to the constraints
natjecanje 	Kattis - natjecanje 	3.2h, Backtracking (Easier) 	4 options for each team with kayak: do nothing, pass to left (if damaged), keep to self (if damaged), pass to right (if damaged)
paintings 	Kattis - paintings 	3.2h, Backtracking (Easier) 	try all possible paintings based on Catherine's preference; skip hideous color pairs
dobra 	Kattis - dobra 	3.2i, Backtracking (Harder) 	try all possible 3^n changes of '_' (to a vowel, an 'L', or other consonant not 'L'); prune invalid states; count valid states
fruitbaskets 	Kattis - fruitbaskets 	3.2i, Backtracking (Harder) 	interesting backtracking problem; compute the small numbers < 200; output all minus this value computed via backtracking
pagelayout 	Kattis - pagelayout 	3.2i, Backtracking (Harder) 	a bit of geometry; O(2^n imes n^2 iterative bitmask will TLE; need to use recursive backtracking with pruning
firefly 	Kattis - firefly 	3.3a, Binary Search 	sort stalactites vs stalagmites separately; brute force height; binary search the obstacles hit
outofsorts 	Kattis - outofsorts 	3.3a, Binary Search 	do O(log n) binary searches on unsorted array n times
roompainting 	Kattis - roompainting 	3.3a, Binary Search 	sort the cans at shop (can be used more than once); use lower_bound for what Joe needs at shop
carefulascent 	Kattis - carefulascent 	3.3b, Bisection and BSTA (Easier) 	BSTA + Physics simulation
freeweights 	Kattis - freeweights 	3.3b, Bisection and BSTA (Easier) 	BSTA + simulation; Mathematical observation
monk 	Kattis - monk 	3.3b, Bisection and BSTA (Easier) 	BSTA + simulation; cool
suspensionbridges 	Kattis - suspensionbridges 	3.3b, Bisection and BSTA (Easier) 	BSTA + Maths; be careful of precision error
a1paper 	Kattis - a1paper 	3.3c, Ternary Search and Others 	division of A1 paper is a kind of DnC principle
cantor 	Kattis - cantor 	3.3c, Ternary Search and Others 	ternary search; also available at UVa 11701 - Cantor
ceiling 	Kattis - ceiling 	3.3c, Ternary Search and Others 	LA 7578 - WorldFinals Phuket16; BST insertion+tree equality check; also available at UVa 01738 - Ceiling Function
classrooms 	Kattis - classrooms 	3.4a, Greedy (Classical) 	variant of interval covering; multiple rooms
froshweek2 	Kattis - froshweek2 	3.4a, Greedy (Classical) 	greedy; sort first; similar to Dragon of Loowater; greedy matching
squarepegs 	Kattis - squarepegs 	3.4a, Greedy (Classical) 	convert square to circular; sort; greedy matching
acm2 	Kattis - acm2 	3.4b, Involving Sorting, Easier 	greedy; sorting
minimumscalar 	Kattis - minimumscalar 	3.4b, Involving Sorting, Easier 	greedy; sorting
shopaholic 	Kattis - shopaholic 	3.4b, Involving Sorting, Easier 	greedy; sorting
airconditioned 	Kattis - airconditioned 	3.4c, Involving Sorting, Harder 	greedy; sorting
birds 	Kattis - birds 	3.4c, Involving Sorting, Harder 	greedy; sorting
delivery 	Kattis - delivery 	3.4c, Involving Sorting, Harder 	greedy; sorting
ballotboxes 	Kattis - ballotboxes 	3.4d, Involving Priority Queue 	greedy; priority queue
canvas 	Kattis - canvas 	3.4d, Involving Priority Queue 	greedy; priority queue
vegetables 	Kattis - vegetables 	3.4d, Involving Priority Queue 	greedy; priority queue
workstations 	Kattis - workstations 	3.4d, Involving Priority Queue 	greedy; priority queue
ants 	Kattis - ants 	3.4e, Non Classical, Easier 	greedy; also available at UVa 10714 - Ants
bank 	Kattis - bank 	3.4e, Non Classical, Easier 	greedy
marblestree 	Kattis - marblestree 	3.4e, Non Classical, Easier 	greedy; also available at UVa 10672 - Marbles on a tree
dvds 	Kattis - dvds 	3.4f, Non Classical, Harder 	greedy
stockbroker 	Kattis - stockbroker 	3.4f, Non Classical, Harder 	greedy
virus 	Kattis - virus 	3.4f, Non Classical, Harder 	greedy
commercials 	Kattis - commercials 	3.5a, Max 1D/2D Range Sum 	transform each input by -P; Kadane's algorithm
prozor 	Kattis - prozor 	3.5a, Max 1D/2D Range Sum 	2D range sum with fix range; output formatting
sellingspatulas 	Kattis - sellingspatulas 	3.5a, Max 1D/2D Range Sum 	-8 per time slot initially; read sale data; 1D range sum; complete search
increasingsubsequence 	Kattis - increasingsubsequence 	3.5b, LIS 	LIS; n â‰¤ 200$; print lexicographically smallest solution, 99% similar to 'longincsubseq'
longincsubseq 	Kattis - longincsubseq 	3.5b, LIS 	standard O(n log k) LIS; print any solution
trainsorting 	Kattis - trainsorting 	3.5b, LIS 	max(LIS(i)+LDS(i)-1), âˆ€i âˆˆ [0...n-1]; also available at UVa 11456
knapsack 	Kattis - knapsack 	3.5c, 0-1 KNAPSACK 	basic DP KNAPSACK; print the solution
orders 	Kattis - orders 	3.5c, 0-1 KNAPSACK 	interesting KNAPSACK variant; print the solution
presidentialelections 	Kattis - presidentialelections 	3.5c, 0-1 KNAPSACK 	pre-process the input to discard non winnable states; be careful of negative total voters; then standard DP KNAPSACK
bagoftiles 	Kattis - bagoftiles 	3.5d, COIN-CHANGE 	count number of ways to do COIN-CHANGE; meet in the middle; DP combinatorics (n choose k) to find the answer for a+b
canonical 	Kattis - canonical 	3.5d, COIN-CHANGE 	complete search possible range of counter examples; do both greedy COIN-CHANGE and DP COIN-CHANGE
exactchange2 	Kattis - exactchange2 	3.5d, COIN-CHANGE 	a variation to the Coin-Change problem; also available at UVa 11517 - Exact Change
beepers 	Kattis - beepers 	3.5e, TSP 	DP or recursive backtracking with sufficient pruning; also available at UVa 10496 - Collecting Beepers
bustour 	Kattis - bustour 	3.5e, TSP 	LA 6028 - WorldFinals Warsaw12; DP TSP variant; also available at UVa 01281 - Bus Tour
cycleseasy 	Kattis - cycleseasy 	3.5e, TSP 	Count number of HAMILTONIAN-TOURs
errands 	Kattis - errands 	3.5e, TSP 	map location names to integer indices; DP TSP
nikola 	Kattis - nikola 	3.5f, DP level 1 	s: (pos, last_jump); t: jump forward or backward
spiderman 	Kattis - spiderman 	3.5f, DP level 1 	simple DP; go up or down; print solution
ticketpricing 	Kattis - ticketpricing 	3.5f, DP level 1 	LA 6867 - Rocky Mountain15; similar with UVa 11450 discussed in this book; real life problem; print (the first) part of the solution
kutevi 	Kattis - kutevi 	3.5g, DP level 2 	s: (360 integer degrees)
tight 	Kattis - tight 	3.5g, DP level 2 	s: (i, j); #tight words of length i that end in digit j divided by #words: (k+1)^n; also available at UVa 10081 - Tight words
walrusweights 	Kattis - walrusweights 	3.5g, DP level 2 	backtracking with memoization
dominoes2 	Kattis - dominoes2 	4.2a, Finding CCs 	unlike UVa 11504, we treat SCCs as CCs; also available at UVa 11518 - Dominos 2
reachableroads 	Kattis - reachableroads 	4.2a, Finding CCs 	report number of CC-1
terraces 	Kattis - terraces 	4.2a, Finding CCs 	group cells with similar height together; if it cannot flow to any other component with lower height, add the size of this CC to answer
wheresmyinternet 	Kattis - wheresmyinternet 	4.2a, Finding CCs 	check connectivity to vertex 1
amoebas 	Kattis - amoebas 	4.2b, Flood Fill, Easier 	easy floodfill
countingstars 	Kattis - countingstars 	4.2b, Flood Fill, Easier 	basic flood fill problem; count CCs
gold 	Kattis - gold 	4.2b, Flood Fill, Easier 	flood fill with extra blocking constraint; also available at UVa 11561 - Getting Gold
10kindsofpeople 	Kattis - 10kindsofpeople 	4.2c, Flood Fill, Harder 	intelligent flood fill; just run once to avoid TLE as there are many queries
coast 	Kattis - coast 	4.2c, Flood Fill, Harder 	intelligent flood fill; just run once to avoid TLE as there are many queries
islands3 	Kattis - islands3 	4.2c, Flood Fill, Harder 	optimistic flood fill; assume all Cs are Ls
brexit 	Kattis - brexit 	4.2d, Topological Sort 	toposort; chain reaction; modified Kahn's algorithm
builddeps 	Kattis - builddeps 	4.2d, Topological Sort 	the graph is acyclic; toposort with DFS from the changed file
conservation 	Kattis - conservation 	4.2d, Topological Sort 	modified Kahn's algorithm; greedily process all steps in a certain lab before alternating to the other lab
pickupsticks 	Kattis - pickupsticks 	4.2d, Topological Sort 	cycle check + toposort if DAG; also available at item UVa 11686 - Pick up sticks
hoppers 	Kattis - hoppers 	4.2e, Graph Properties Check 	the answer is number of CC-1 if there is at least one bipartite component in the graph; or number of CC otherwise
molekule 	Kattis - molekule 	4.2e, Graph Properties Check 	undirected tree is also Bipartite/bi-colorable; bi-color it with 0 and 1; direct all edges from 0 to 1 (or vice versa)
runningmom 	Kattis - runningmom 	4.2e, Graph Properties Check 	find a cycle in a directed graph
torn2pieces 	Kattis - torn2pieces 	4.2e, Graph Properties Check 	construct graph from strings; traversal from source to target; reachability check; print path
birthday 	Kattis - birthday 	4.2f, Cut Vertices/Bridges 	check if the input graph contains any bridge; N is small though so weaker solution can still be accepted
caveexploration 	Kattis - caveexploration 	4.2f, Cut Vertices/Bridges 	find size of bi-connected components that contains vertex 0; identify the bridges
intercept 	Kattis - intercept 	4.2f, Cut Vertices/Bridges 	Articulation Points in SSSP Spanning DAG; clever modification of Dijkstra's
cantinaofbabel 	Kattis - cantinaofbabel 	4.2g, Finding SCCs 	build directed graph 'can_speak'; compute the largest SCC of 'can_speak'; keep this largest SCC
dominos 	Kattis - dominos 	4.2g, Finding SCCs 	count the number of SCCs without incoming edge from a vertex outside that SCC; also available at UVa 11504 - Dominos
equivalences 	Kattis - equivalences 	4.2g, Finding SCCs 	contract input directed graph into SCCs; count SCCs that have in-/out-degrees = 0; report the max
faultyrobot 	Kattis - faultyrobot 	4.2h, Really Ad Hoc 	interesting graph traversal variant
promotions 	Kattis - promotions 	4.2h, Really Ad Hoc 	modified DFS; special graph; DAG; also available at UVa 13015 - Promotions
succession 	Kattis - succession 	4.2h, Really Ad Hoc 	(upwards) traversal of family DAG; use unordered_maps; make the founder has very large starting blood to avoid fraction
cats 	Kattis - cats 	4.3a, MST, Standard 	standard MST
islandhopping 	Kattis - islandhopping 	4.3a, MST, Standard 	MST on small complete graph
lostmap 	Kattis - lostmap 	4.3a, MST, Standard 	actually just a standard MST problem
minspantree 	Kattis - minspantree 	4.3a, MST, Standard 	very standard MST problem; check if a spanning tree is formed; also output the edges in any spanning tree in lexicographic order
millionairemadness 	Kattis - millionairemadness 	4.3b, MST, Variants 	MiniMax path problem
muddyhike 	Kattis - muddyhike 	4.3b, MST, Variants 	MiniMax path problem
naturereserve 	Kattis - naturereserve 	4.3b, MST, Variants 	Prim's algorithm from multiple sources
buttonbashing 	Kattis - buttonbashing 	4.4a, SSSP, BFS, Easier 	very similar to UVa 12160
grid 	Kattis - grid 	4.4a, SSSP, BFS, Easier 	modified BFS with step size multiplier
horror 	Kattis - horror 	4.4a, SSSP, BFS, Easier 	SSSP from all sources = horror movies; report lowest ID with the highest unweighted SSSP distance
fire2 	Kattis - fire2 	4.4b, SSSP, BFS, Harder 	very similar to UVa 11624
lost 	Kattis - lost 	4.4b, SSSP, BFS, Harder 	interesting twist of BFS/SSSP spanning tree
mallmania 	Kattis - mallmania 	4.4b, SSSP, BFS, Harder 	multi-sources BFS from m1; get minimum at border of m2; also available at UVa 11101 - Mall Mania
oceancurrents 	Kattis - oceancurrents 	4.4b, SSSP, BFS, Harder 	0/1-weighted SSSP; BFS+deque; also available at UVa 11573 - Ocean Currents
flowerytrails 	Kattis - flowerytrails 	4.4c, SSSP, Dijkstra, Easier 	Dijkstra's; record predecessor graph as there can be multiple shortest paths; also available at UVa 12878 - Flowery Trails
shortestpath1 	Kattis - shortestpath1 	4.4c, SSSP, Dijkstra, Easier 	very standard Dijkstra's problem
shortestpath2 	Kattis - shortestpath2 	4.4c, SSSP, Dijkstra, Easier 	Dijkstra's with modification; edges only available periodically; be careful with P = 0 case
texassummers 	Kattis - texassummers 	4.4c, SSSP, Dijkstra, Easier 	Dijkstra's; complete weighted graph; print path
blockcrusher 	Kattis - blockcrusher 	4.4d, SSSP, Dijkstra, Harder 	Dijkstra's from top row to bottom row (or vice versa); print path
emptyingbaltic 	Kattis - emptyingbaltic 	4.4d, SSSP, Dijkstra, Harder 	Dijkstra's variant; grow spanning tree from drain/source
invasion 	Kattis - invasion 	4.4d, SSSP, Dijkstra, Harder 	SSSP with multiple and successive sources; multiple calls of Dijkstra's (gets lighter each time if pruned properly)
visualgo 	Kattis - visualgo 	4.4d, SSSP, Dijkstra, Harder 	Dijkstra's produces SSSP spanning DAG if there are multiple shortest paths from s to t; counting paths on DAG
hauntedgraveyard 	Kattis - hauntedgraveyard 	4.4e, SSSP, -ve weight 	Bellman Ford's; negative cycle check needed
shortestpath3 	Kattis - shortestpath3 	4.4e, SSSP, -ve weight 	Bellman Ford's; do DFS/BFS from vertices that are part of any negative cycle
xyzzy 	Kattis - xyzzy 	4.4e, SSSP, -ve weight 	check 'positive' cycle; check connectedness; also available at UVa 10557
allpairspath 	Kattis - allpairspath 	4.5a, APSP, Standard 	basic Floyd Warshall's; tricky negative cycle checks
importspaghetti 	Kattis - importspaghetti 	4.5a, APSP, Standard 	smallest cycle; print path by breaking the self loop into i - other vertex j - i
transportationplanning 	Kattis - transportationplanning 	4.5a, APSP, Standard 	APSP; FW; for each unused edge, use it and see how much distance is reduced; get minimum; O(n^4)
arbitrage 	Kattis - arbitrage 	4.5b, APSP, Variants 	arbitrage problem; similar to UVa 00104 and 00436
kastenlauf 	Kattis - kastenlauf 	4.5b, APSP, Variants 	n â‰¤ 100; Warshall's transitive closure problem
secretchamber 	Kattis - secretchamber 	4.5b, APSP, Variants 	LA 8047 - WorldFinals RapidCity17; Warshall's transitive closure; also available at UVa 01757 - Secret Chamber ...
monopoly 	Kattis - monopoly 	4.6a, S/Longest Paths on DAG 	K, b, r are all irrelevant; vertex value is either +ve (salary) or -ve (tax); LONGEST-PATH on DAG (u < v); exclude source value
mravi 	Kattis - mravi 	4.6a, S/Longest Paths on DAG 	reverse edge directions to change the input tree into a DAG; find longest path from leaf that contains ant to root
safepassage 	Kattis - safepassage 	4.6a, S/Longest Paths on DAG 	SSSP; implicit DAG; s: (cloak_pos, bitmask); try all possible ways to go back and forth between gate and dorm; report minimum
savinguniverse 	Kattis - savinguniverse 	4.6a, S/Longest Paths on DAG 	s: (cur_SE; Q_pos); t: stay in this search engine or switch to one other; unweighted SSSP on DAG
robotsonagrid 	Kattis - robotsonagrid 	4.6b, Counting Paths, Easier 	counting paths in grid (implicit DAG); DP
runningsteps 	Kattis - runningsteps 	4.6b, Counting Paths, Easier 	LA 7360 - Greater NY15; s: (leg, l2, r2, l1, r1); t: left/right leg 1/2 steps; use unordered_map as memo table; use pruning
scenes 	Kattis - scenes 	4.6b, Counting Paths, Easier 	s: (pos, ribbon_left); t: try all possible heights; ignore the flat scenes first and subtract those cases at the end
cardmagic 	Kattis - cardmagic 	4.6c, Conversion to DAG 	s: (deck, tgt_left); t: val 1 to K â‰¤ tgt_left
drinkresponsibly 	Kattis - drinkresponsibly 	4.6c, Conversion to DAG 	s: (cur_drink, money_left, u_left); be careful with precision errors; print solution
maximizingwinnings 	Kattis - maximizingwinnings 	4.6c, Conversion to DAG 	separate the maximizing and minimizing problem; s: (cur_room, turns_left); t: go to other room or stay
adjoin 	Kattis - adjoin 	4.6d, Tree 	the key parts are finding tree diameter and its center (along that diameter); also see UVa 11695
tourists 	Kattis - tourists 	4.6d, Tree 	APSP on Tree (special requirements); LCA
bookclub 	Kattis - bookclub 	4.6e, Bipartite Graph 	check if perfect MCBM is possible
elementarymath 	Kattis - elementarymath 	4.6e, Bipartite Graph 	left set: (a, b); right set: possible scores; possible if MCBM = n; use long long
escapeplan 	Kattis - escapeplan 	4.6e, Bipartite Graph 	left set: robots; right set: holes; 3 version of similar bipartite graphs; MCBM
catenyms 	Kattis - catenyms 	4.6f, Eulerian Graph 	Euler graph property check; 26 vertices; directed non simple graph; printing the Euler tour in lexicographic order
eulerianpath 	Kattis - eulerianpath 	4.6f, Eulerian Graph 	Euler graph property check; directed graph; printing the Euler tour
railroad2 	Kattis - railroad2 	4.6f, Eulerian Graph 	x-shaped level junctions have even degrees - ignore X; y-shaped switches have degree 3 - Y has to be even
easiest 	Kattis - easiest 	5.2a, Math Simulation, Easier 	complete search; sum of digit
growlinggears 	Kattis - growlinggears 	5.2a, Math Simulation, Easier 	physics of parabola; derivation; try all gears
thanosthehero 	Kattis - thanosthehero 	5.2a, Math Simulation, Easier 	for-loop from backwards
trollhunt 	Kattis - trollhunt 	5.2a, Math Simulation, Easier 	brute force; simple
crackingrsa 	Kattis - crackingrsa 	5.2b, Math Simulation, Harder 	a bit number theory; solvable with complete search
falling 	Kattis - falling 	5.2b, Math Simulation, Harder 	rework the formula; complete search up to sqrt(D)
repeatingdecimal 	Kattis - repeatingdecimal 	5.2b, Math Simulation, Harder 	simulate the process until we have printed c digits; append trailing zeroes if necessary
averageshard 	Kattis - averageshard 	5.2c, Finding Pattern, Easier 	find O(n) formula; also see Kattis - averageseasy
bishops 	Kattis - bishops 	5.2c, Finding Pattern, Easier 	chess pattern involving bishops; from IPSC 2004
bus 	Kattis - bus 	5.2c, Finding Pattern, Easier 	involving powers of two
crne 	Kattis - crne 	5.2c, Finding Pattern, Easier 	simulate cutting process on small numbers; get formula
mortgage 	Kattis - mortgage 	5.2d, Finding Pattern, Harder 	geometric progression; divergent but finite; special case when r = 1.0 (no interest)
neighborhoodwatch 	Kattis - neighborhoodwatch 	5.2d, Finding Pattern, Harder 	sum of AP; inclusion-exclusion
nine 	Kattis - nine 	5.2d, Finding Pattern, Harder 	find the required formula
beehouseperimeter 	Kattis - beehouseperimeter 	5.2e, Grid 	transform the hexagonal grid like Kattis - honeyheist; flood fill from outside Alice's house; count #walls touched
honeyheist 	Kattis - honeyheist 	5.2e, Grid 	transform the hexagonal grid input into 2D grid first; then run SSSP on unweighted graph; BFS
maptiles2 	Kattis - maptiles2 	5.2e, Grid 	simple conversion between two grid indexing systems
candlebox 	Kattis - candlebox 	5.2f, Number Systems/Sequences 	sum of arithmetic series [1..N]; -6 for Rita or -3 for Theo; brute force Rita's age; also available at UVa 13161 - Candle Box
collatz 	Kattis - collatz 	5.2f, Number Systems/Sequences 	similar to UVa 00694; just do as asked
permutedarithmeticsequence 	Kattis - permutedarithmeticsequence 	5.2f, Number Systems/Sequences 	sort differences of adjacent items
rationalsequence 	Kattis - rationalsequence 	5.2f, Number Systems/Sequences 	pattern finding; tree traversal on a special tree
cokolada 	Kattis - cokolada 	5.2g, Log, Exp, Pow 	the answers involve powers of two and a simulation
factstone 	Kattis - factstone 	5.2g, Log, Exp, Pow 	use logarithm; power; also available at UVa 10916 - Factstone Benchmark
thebackslashproblem 	Kattis - thebackslashproblem 	5.2g, Log, Exp, Pow 	actually power of two
ada 	Kattis - ada 	5.2h, Polynomial 	polynomial problem; apply the given procedure recursively
plot 	Kattis - plot 	5.2h, Polynomial 	analyze the given pseudocode; the required pattern involves Binomial Coefficients
polymul1 	Kattis - polymul1 	5.2h, Polynomial 	basic polynomial multiplication problem
aliennumbers 	Kattis - aliennumbers 	5.2i, Base Number Variants 	source base to decimal; decimal to target base
arithmetic 	Kattis - arithmetic 	5.2i, Base Number Variants 	conversion of octal (per 4 bits) to hexa (per 3 bits); be careful with leading zeroes
ignore 	Kattis - ignore 	5.2i, Base Number Variants 	actually a base 7 conversion problem as only 7 digits are meaningful when rotated
deadfraction 	Kattis - deadfraction 	5.2j, Fractions 	try every single possible repeating decimals; also available at UVa 10555 - Dead Fraction
fraction 	Kattis - fraction 	5.2j, Fractions 	continued fraction to normal fraction and vice versa
jointattack 	Kattis - jointattack 	5.2j, Fractions 	fraction; flip the fraction after each step; gcd
mixedfractions 	Kattis - mixedfractions 	5.2j, Fractions 	convert fraction to mixed fraction
matrix 	Kattis - matrix 	5.2k, Really Ad Hoc 	use simple linear algebra; one special case when c = 0
trip 	Kattis - trip 	5.2k, Really Ad Hoc 	be careful with precision error; also available at UVa 10137 - The Trip
yoda 	Kattis - yoda 	5.2k, Really Ad Hoc 	ad hoc; 9 digits comparison
primaryarithmetic 	Kattis - primaryarithmetic 	5.3a, Big Integer, Basic 	not a Big Integer problem but a simulation of basic addition
simpleaddition 	Kattis - simpleaddition 	5.3a, Big Integer, Basic 	that A+B on BigInteger question
wizardofodds 	Kattis - wizardofodds 	5.3a, Big Integer, Basic 	if K is bigger than 350, the answer is clear; else just check if 2^K â‰¥ N
flowergarden 	Kattis - flowergarden 	5.3b, (Prob) Prime Testing 	Euclidean dist; small prime check; use isProbablePrime; simulation; faster solutions exist
goldbach2 	Kattis - goldbach2 	5.3b, (Prob) Prime Testing 	simple brute force problem; use isProbablePrime; faster solutions exist
primes2 	Kattis - primes2 	5.3b, (Prob) Prime Testing 	convert input to either base 2/8/10/16; skip those that cause NumberFormatException error; use isProbablePrime test and gcd
pseudoprime 	Kattis - pseudoprime 	5.3b, (Prob) Prime Testing 	yes if !isPrime(p) && a.modPow(p, p) = a; Big Integer; also available at UVa 11287 - Pseudoprime Numbers
allaboutthatbase 	Kattis - allaboutthatbase 	5.3c, Bonus: Base Number 	check base 1 to 36; base 1 is special; use Java BigInteger
basicremains 	Kattis - basicremains 	5.3c, Bonus: Base Number 	also involving BigInteger mod; also available at UVa 10551 - Basic Remains
oktalni 	Kattis - oktalni 	5.3c, Bonus: Base Number 	convert each 3-bits of binary strings into octal; use Java BigInteger
whichbase 	Kattis - whichbase 	5.3c, Bonus: Base Number 	try reading input in octal/decimal/hexadecimal; use Java Integer/BigInteger
jackpot 	Kattis - jackpot 	5.3d, Bonus: Others 	similar to Kattis - smallestmultiple; use Java BigInteger or other faster solutions
smallestmultiple 	Kattis - smallestmultiple 	5.3d, Bonus: Others 	simple LCMs of all numbers; use Java BigInteger to be safe
thermostat 	Kattis - thermostat 	5.3d, Bonus: Others 	convert one temperature to another; use fraction; use Java BigInteger; gcd
anti11 	Kattis - anti11 	5.4a, Fibonacci Numbers 	this problem degenerates into a modified Fibonacci numbers
batmanacci 	Kattis - batmanacci 	5.4a, Fibonacci Numbers 	Fibonacci; observation on N; Divide and Conquer
rijeci 	Kattis - rijeci 	5.4a, Fibonacci Numbers 	simple simulation with a single loop; Fibonacci
election 	Kattis - election 	5.4b, Binomial Coefficients 	compute the answers with help of binomial coefficients
lockedtreasure 	Kattis - lockedtreasure 	5.4b, Binomial Coefficients 	the answer is nCm-1
oddbinom 	Kattis - oddbinom 	5.4b, Binomial Coefficients 	OEIS A006046
catalan 	Kattis - catalan 	5.4c, Catalan Numbers 	basic Catalan Numbers
catalansquare 	Kattis - catalansquare 	5.4c, Catalan Numbers 	Catalan Numbers++; follow the description
fiat 	Kattis - fiat 	5.4c, Catalan Numbers 	N-th Catalan Number; use Fermat's little theorem
character 	Kattis - character 	5.4d, Others, Easier 	OEIS A000295
honey 	Kattis - honey 	5.4d, Others, Easier 	OEIS A002898
integerdivision 	Kattis - integerdivision 	5.4d, Others, Easier 	count frequencies of each remainder of [0..d-1]; add C(freq, 2) per such remainder
anagramcounting 	Kattis - anagramcounting 	5.4e, Others, Harder 	use Java BigInteger
incognito 	Kattis - incognito 	5.4e, Others, Harder 	count frequencies; combinatorics; minus one
tritiling 	Kattis - tritiling 	5.4e, Others, Harder 	there are two related recurrences here; also available at UVa 10918 - Tri Tiling
enlarginghashtables 	Kattis - enlarginghashtables 	5.5a, Prime Numbers 	use sieve up to 40â€‰000; prime test numbers greater than 2n; check primality of n itself
primesieve 	Kattis - primesieve 	5.5a, Prime Numbers 	use sieve up to 10^8; it is fast enough
reseto 	Kattis - reseto 	5.5a, Prime Numbers 	sieve of Eratosthenes until the k-th crossing
prsteni 	Kattis - prsteni 	5.5b, GCD and/or LCM 	GCD of first circle radius with subsequent circle radiuses
rationalarithmetic 	Kattis - rationalarithmetic 	5.5b, GCD and/or LCM 	fraction; use GCD to simplify output
temperatureconfusion 	Kattis - temperatureconfusion 	5.5b, GCD and/or LCM 	simple conversion; fraction; GCD
inversefactorial 	Kattis - inversefactorial 	5.5c, Factorial 	good problem; number of digits in factorial
loworderzeros 	Kattis - loworderzeros 	5.5c, Factorial 	last non zero digit of factorial; classic
namethatpermutation 	Kattis - namethatpermutation 	5.5c, Factorial 	permutation number; involving factorial
tutorial 	Kattis - tutorial 	5.5c, Factorial 	factorial is just part of the problem; pruning
pascal 	Kattis - pascal 	5.5d, Finding Prime Factors 	find lowest prime factor of N; special case: N = 1
primalrepresentation 	Kattis - primalrepresentation 	5.5d, Finding Prime Factors 	factorization problem; use sieve to avoid TLE; use long long; 231-1 is a prime
primereduction 	Kattis - primereduction 	5.5d, Finding Prime Factors 	factorization problem
consecutivesums 	Kattis - consecutivesums 	5.5e, Prime Factors Related 	work with factor; sum of Arithmetic Progression series
factovisors 	Kattis - factovisors 	5.5e, Prime Factors Related 	compare prime factors of n! and m; also available at UVa 10139 - Factovisors
fundamentalneighbors 	Kattis - fundamentalneighbors 	5.5e, Prime Factors Related 	reverse prime power notation
iks 	Kattis - iks 	5.5e, Prime Factors Related 	sieve of Eratosthenes; prime factorize each number; spread the factors around to maximize final GCD/minimize total operations
almostperfect 	Kattis - almostperfect 	5.5f, Prime Factors Functions 	sumDiv(N)-N; minor variation
divisors 	Kattis - divisors 	5.5f, Prime Factors Functions 	return numDiv(nCk); but do not compute nCk directly; work with its prime factors
relatives 	Kattis - relatives 	5.5f, Prime Factors Functions 	EulerPhi(N); also available at UVa 10299 - Relatives
data 	Kattis - data 	5.5g, Modified Sieve 	numDiffPF(V) for V up to N x 1000; Brute force combination/all subsets; DP Subset
farey 	Kattis - farey 	5.5g, Modified Sieve 	pre-calculate EulerPhi(N); do prefix sum (1D RSQ) of EulerPhi(N) from 1 to each N; the answer is related to this value
nonprimefactors 	Kattis - nonprimefactors 	5.5g, Modified Sieve 	numDiv(i) - numDiffPF(i) âˆ€i in the range
anothercandies 	Kattis - anothercandies 	5.5h, Modulo Arithmetic 	simple modulo arithmetic
ones 	Kattis - ones 	5.5h, Modulo Arithmetic 	no factor of 2 and 5 implies that there is no trailing zero; also available at UVa 10127 - Ones
threedigits 	Kattis - threedigits 	5.5h, Modulo Arithmetic 	simulate factorial computation; remove trailing zeroes; keep many last few non-zero digits using modulo
candydistribution 	Kattis - candydistribution 	5.5i, Extended Euclid and CRT 	the problem boils down to finding C-1 (mod K); be careful when the answer is "IMPOSSIBLE" or â‰¤ K
heliocentric 	Kattis - heliocentric 	5.5i, Extended Euclid and CRT 	Chinese Remainder Theorem with two linear congruences; or just use brute force simulation modulo 365 and 687, respectively
modulararithmetic 	Kattis - modulararithmetic 	5.5i, Extended Euclid and CRT 	the division operation requires modular inverse; use Extended Euclid algorithm
divisible 	Kattis - divisible 	5.5j, Other Number Theory 	divisibility; linear pass algorithm
fizzbuzz 	Kattis - fizzbuzz 	5.5j, Other Number Theory 	actually just about easy divisibility properties
thinkingofanumber 	Kattis - thinkingofanumber 	5.5j, Other Number Theory 	simple range; use min/max properly; then small divisibility tests
dicegame 	Kattis - dicegame 	5.6a, Probability, Easier 	simple comparison of two expected values
odds 	Kattis - odds 	5.6a, Probability, Easier 	complete search; simple probability
secretsanta 	Kattis - secretsanta 	5.6a, Probability, Easier 	simple probability; derangement vs factorial; the answer for larger N converges
bobby 	Kattis - bobby 	5.6b, Probability, Harder 	computation of expected value
goodcoalition 	Kattis - goodcoalition 	5.6b, Probability, Harder 	DP probability; like KNAPSACK
password 	Kattis - password 	5.6b, Probability, Harder 	expected value; the given probabilities already sum to 1.0
cool1 	Kattis - cool1 	5.7a, Cycle Finding 	the first part is a cycle-finding problem; state is small (8M); be careful of the definition of trail
happyprime 	Kattis - happyprime 	5.7a, Cycle Finding 	simple cycle-finding; TLE otherwise; small prime check
rats 	Kattis - rats 	5.7a, Cycle Finding 	string processing plus cycle finding; use unordered_set data structure
bachetsgame 	Kattis - bachetsgame 	5.8a, Game Theory 	2 players game; Dynamic Programming; also available at UVa 10404 - Bachet's Game
blockgame2 	Kattis - blockgame2 	5.8a, Game Theory 	observe the pattern; there are two obvious winnable cases if N == M and N%M == 0; there is only one move if M < N < 2M; finally, we can always win if N > 2M
euclidsgame 	Kattis - euclidsgame 	5.8a, Game Theory 	minimax; backtracking; also available at UVa 10368 - Euclid's Game
joylessgame 	Kattis - joylessgame 	5.8a, Game Theory 	game theory
checkingforcorrectness 	Kattis - checkingforcorrectness 	5.9a, Matrix Power 	Java Big Integer; one subtask uses modPow
porpoises 	Kattis - porpoises 	5.9a, Matrix Power 	Fibonacci; matrix power; modulo
squawk 	Kattis - squawk 	5.9a, Matrix Power 	count the number of paths of length L in an undirected graph after t steps that are reachable from source s
conundrum 	Kattis - conundrum 	6.3a, Cipher, Easier 	simple cipher
encodedmessage 	Kattis - encodedmessage 	6.3a, Cipher, Easier 	simple 2D grid cipher
t9spelling 	Kattis - t9spelling 	6.3a, Cipher, Easier 	similar to (the reverse of) UVa 12896
anewalphabet 	Kattis - anewalphabet 	6.3b, Cipher, Medium 	simple cipher; 26 characters
piglatin 	Kattis - piglatin 	6.3b, Cipher, Medium 	simple; check the vowels that include 'y' and process it
secretmessage 	Kattis - secretmessage 	6.3b, Cipher, Medium 	just do as asked; use 2D grid
tajna 	Kattis - tajna 	6.3b, Cipher, Medium 	simple 2D grid cipher
grille 	Kattis - grille 	6.3c, Cipher, Harder 	involving 2D array with rotation
itsasecret 	Kattis - itsasecret 	6.3c, Cipher, Harder 	playfair cipher; 2D array; quite tedious
permutationencryption 	Kattis - permutationencryption 	6.3c, Cipher, Harder 	be careful of newline
progressivescramble 	Kattis - progressivescramble 	6.3c, Cipher, Harder 	the encode part is trivial; the decode part requires a bit of thinking
textencryption 	Kattis - textencryption 	6.3c, Cipher, Harder 	convert input alphabets to UPPERCASEs; loop
marko 	Kattis - marko 	6.3d, Frequency Counting 	frequency counting with unordered_map
ostgotska 	Kattis - ostgotska 	6.3d, Frequency Counting 	count the frequency of substring 'ae'
zoo 	Kattis - zoo 	6.3d, Frequency Counting 	parsing; keep last token; tolower; frequency counting with map; order needed
autori 	Kattis - autori 	6.3e, Input Parsing (Iterative) 	simple string tokenizer problem
pervasiveheartmonitor 	Kattis - pervasiveheartmonitor 	6.3e, Input Parsing (Iterative) 	simple parsing; then finding average
timebomb 	Kattis - timebomb 	6.3e, Input Parsing (Iterative) 	just a tedious input parsing problem; divisibility by 6
calculator 	Kattis - calculator 	6.3f, Input Parsing (Recursive) 	recursive parser and evaluator
otpor 	Kattis - otpor 	6.3f, Input Parsing (Recursive) 	parallel vs series evaluation; write a recursive parser or use linear pass with stack
polish 	Kattis - polish 	6.3f, Input Parsing (Recursive) 	recursive parser
subexpression 	Kattis - subexpression 	6.3f, Input Parsing (Recursive) 	recursive parsing; use DP; similar to https://visualgo.net/en/recursion tree versus DAG
apaxiaaans 	Kattis - apaxiaaans 	6.3g, Regular Expression 	replace multiple occurrences of a lowercase alphabet with a single one; we can also use regex
hidden 	Kattis - hidden 	6.3g, Regular Expression 	just a careful 1D array manipulation; we can also use regex
lindenmayorsystem 	Kattis - lindenmayorsystem 	6.3g, Regular Expression 	DAT; map char to string; simulation; max answer â‰¤ 30*5^5; we can also use regex
display 	Kattis - display 	6.3h, Output Formatting, Easier 	unordered_map; map a digit -> enlarged 7x5 version
musicalnotation 	Kattis - musicalnotation 	6.3h, Output Formatting, Easier 	simple but tedious
skener 	Kattis - skener 	6.3h, Output Formatting, Easier 	enlarging 2D character array
asciifigurerotation 	Kattis - asciifigurerotation 	6.3i, Output Formatting, Harder 	rotate the input 90 degrees clockwise; remove trailing whitespaces; tedious
imagedecoding 	Kattis - imagedecoding 	6.3i, Output Formatting, Harder 	simple Run-Length Encoding
juryjeopardy 	Kattis - juryjeopardy 	6.3i, Output Formatting, Harder 	tedious problem
nizovi 	Kattis - nizovi 	6.3i, Output Formatting, Harder 	formatting with indentation; not that trivial but sample input/output helps
phonelist 	Kattis - phonelist 	6.3j, String Comparison 	sort the numbers; see if num i is a prefix of num i+1
rhyming 	Kattis - rhyming 	6.3j, String Comparison 	compare suffix of a common word with the list of other given words
smartphone 	Kattis - smartphone 	6.3j, String Comparison 	compare prefix so far with the target string and the 3 suggestions; output 1 of 4 options with shortest number of keypresses
irepeatmyself 	Kattis - irepeatmyself 	6.3k, Really Ad Hoc 	string period; complete search
kolone 	Kattis - kolone 	6.3k, Really Ad Hoc 	simulate the requirement; be careful of corner cases
raggedright 	Kattis - raggedright 	6.3k, Really Ad Hoc 	just simulate the requirement
zipfslaw 	Kattis - zipfslaw 	6.3k, Really Ad Hoc 	sort the words to simplify this problem; also available at UVa 10126 - Zipf's Law
geneticsearch 	Kattis - geneticsearch 	6.4a, String Matching, Standard 	multiple string matchings
powerstrings 	Kattis - powerstrings 	6.4a, String Matching, Standard 	find s in s+s; similar with UVa 00455; also available at UVa 10298 - Power Strings
scrollingsign 	Kattis - scrollingsign 	6.4a, String Matching, Standard 	modified string matching; complete search; also available at UVa 11576 - Scrolling Sign
stringmatching 	Kattis - stringmatching 	6.4a, String Matching, Standard 	basic KMP; TLE with strstr/Suffix Array
boggle 	Kattis - boggle 	6.4b, String Matching, 2D Grid 	2D grid; backtracking
kinarow 	Kattis - kinarow 	6.4b, String Matching, 2D Grid 	brute the top left point of each possible x or o row, then straight-line (horizontal, vertical) or two diagonals 2D string matching
knightsearch 	Kattis - knightsearch 	6.4b, String Matching, 2D Grid 	2D grid; backtracking or DP
inflagrantedelicto 	Kattis - inflagrantedelicto 	6.5a, DP String, Classic 	k_p is always 2 (read the problem description); k_r is the LCS of the two permutations plus one; O(n log k) solution
pandachess 	Kattis - pandachess 	6.5a, DP String, Classic 	see UVa 10635; LCS -> LIS; O(n log k) solution
princeandprincess 	Kattis - princeandprincess 	6.5a, DP String, Classic 	find LCS of two permutations; also available at UVa 10635 - Prince and Princess
exam 	Kattis - exam 	6.5b, DP String, Non Classic 	s: (pos, correct_left); t: either your friend is wrong or your friend is right, process accordingly; easier solution exists
heritage 	Kattis - heritage 	6.5b, DP String, Non Classic 	s: (cur_pos); t: try all N words in dictionary; final answer modulo prime
hillnumbers 	Kattis - hillnumbers 	6.5b, DP String, Non Classic 	digit DP; s: (prev_digit, pos, is_rising, is_lower); try digit by digit
stringfactoring 	Kattis - stringfactoring 	6.5b, DP String, Non Classic 	s: the min weight of substring [i..j]; also available at UVa 11022 - String Factoring
buzzwords 	Kattis - buzzwords 	6.6a, Suffix Trie/Tree/Array 	Longest Repeated Substring that appears X times (2 â‰¤ X < N); also available at UVa 11855 - Buzzwords
dvaput 	Kattis - dvaput 	6.6a, Suffix Trie/Tree/Array 	easy Longest Repeated Substring problem
suffixarrayreconstruction 	Kattis - suffixarrayreconstruction 	6.6a, Suffix Trie/Tree/Array 	clever creative problem involving Suffix Array concept; be careful that '*' can be more than one character
suffixsorting 	Kattis - suffixsorting 	6.6a, Suffix Trie/Tree/Array 	basic Suffix Array construction problem; be careful with terminating symbol
browniepoints 	Kattis - browniepoints 	7.2a, Points 	points and quadrants; simple; also available at UVa 10865 - Brownie Points
cursethedarkness 	Kattis - cursethedarkness 	7.2a, Points 	Euclidean dist
imperfectgps 	Kattis - imperfectgps 	7.2a, Points 	Euclidean dist; simulation
hurricanedanger 	Kattis - hurricanedanger 	7.2b, Lines 	distance from point to line (not vector); be careful of precision error; work with integers
logo2 	Kattis - logo2 	7.2b, Lines 	n vectors that sum to 0; given n-1 vectors, find the unknown vector; also available at UVa 11519 - Logo 2
platforme 	Kattis - platforme 	7.2b, Lines 	line segment intersection tests; N â‰¤ 100; complete search
unlockpattern 	Kattis - unlockpattern 	7.2b, Lines 	complete search; Euclidean dist
biggest 	Kattis - biggest 	7.2c, Circles 	find biggest area of sector using simulation; use array (not that larget) to avoid precision error
estimatingtheareaofacircle 	Kattis - estimatingtheareaofacircle 	7.2c, Circles 	PI estimation experiment
ornaments 	Kattis - ornaments 	7.2c, Circles 	arch length plus two times tangent lengths
watchdog 	Kattis - watchdog 	7.2c, Circles 	in circle test; brute force
alldifferentdirections 	Kattis - alldifferentdirections 	7.2d, Triangles (Trigonometry) 	use trigonometry to compute x and y displacement
billiard 	Kattis - billiard 	7.2d, Triangles (Trigonometry) 	enlarge the billiard table; then this is solvable with atan2
egypt 	Kattis - egypt 	7.2d, Triangles (Trigonometry) 	Pythagorean theorem/triple; also available at UVa 11854 - Egypt
mountainbiking 	Kattis - mountainbiking 	7.2d, Triangles (Trigonometry) 	up to 4 line segments; simple trigonometry; simple Physics/Kinematic equation
cropeasy 	Kattis - cropeasy 	7.2e, Triangles + Circles 	complete search 3 points/tree; check if the center is integer
stickysituation 	Kattis - stickysituation 	7.2e, Triangles + Circles 	see if 3 sides form a triangle; see UVa 11579
trilemma 	Kattis - trilemma 	7.2e, Triangles + Circles 	triangle properties; sort the 3 sides first
cetvrta 	Kattis - cetvrta 	7.2f, Quadrilaterals 	sort the x and y points, then you will know the 4th point
officespace 	Kattis - officespace 	7.2f, Quadrilaterals 	rectangles; small numbers; 2D Boolean arrays
rectanglesurrounding 	Kattis - rectanglesurrounding 	7.2f, Quadrilaterals 	rectangles; small; 2D Boolean arrays
roundedbuttons 	Kattis - roundedbuttons 	7.2f, Quadrilaterals 	in-rectangle/in-square test; in-4-circles tests
convexhull 	Kattis - convexhull 	7.3a, Polygon, Easier 	basic convex hull problem; be careful with duplicate points and collinear points
convexpolygonarea 	Kattis - convexpolygonarea 	7.3a, Polygon, Easier 	even more basic problem about area of polygon than Kattis - polygonarea
cuttingcorners 	Kattis - cuttingcorners 	7.3a, Polygon, Easier 	simulation of angle checks
robotprotection 	Kattis - robotprotection 	7.3a, Polygon, Easier 	simply find the area of convex hull
convex 	Kattis - convex 	7.3b, Polygon, Harder 	must understand the concept of convex polygon; a bit of mathematical insights: GCD; sort
pointinpolygon 	Kattis - pointinpolygon 	7.3b, Polygon, Harder 	in/out and on polygon
roberthood 	Kattis - roberthood 	7.3b, Polygon, Harder 	the classic furthest pair problem; use convex hull and then rotating caliper
committeeassignment 	Kattis - committeeassignment 	8.2a, Challenging Backtracking 	backtracking; pruning; add a member to existing committee or create a new committee; TLE with DP bitmask
holeynqueensbatman 	Kattis - holeynqueensbatman 	8.2a, Challenging Backtracking 	similar with UVa 11195
pebblesolitaire 	Kattis - pebblesolitaire 	8.2a, Challenging Backtracking 	s: (bitmask); simulation; pick the smallest answer
ecoins 	Kattis - ecoins 	8.2b, State-Space, BFS, Easier 	s: (conventional-value, infotechnological value); BFS; also available at UVa 10306 - e-Coins
elevatortrouble 	Kattis - elevatortrouble 	8.2b, State-Space, BFS, Easier 	s: (cur_level); only 1M floors; go up/down; BFS
safe 	Kattis - safe 	8.2b, State-Space, BFS, Easier 	s: (convert 3x3 grid into a base 4 integer); BFS
keyboard 	Kattis - keyboard 	8.2c, State-Space, BFS, Harder 	LA 7155 - WorldFinals Marrakech15; s: (row, col, char_typed); also available at UVa 01714 - Keyboarding
robotmaze 	Kattis - robotmaze 	8.2c, State-Space, BFS, Harder 	s: (r, c, dir, steps); be careful of corner cases
robotturtles 	Kattis - robotturtles 	8.2c, State-Space, BFS, Harder 	s: (r, c, dir, bitmask_ice_castles); print solution; very tedious
bigtruck 	Kattis - bigtruck 	8.2d, State-Space, Dijkstra 	s: (city, items_picked); use Dijkstra's
bumped 	Kattis - bumped 	8.2d, State-Space, Dijkstra 	s: (city, has_use_free_ticket); use Dijkstra's
destinationunknown 	Kattis - destinationunknown 	8.2d, State-Space, Dijkstra 	use Dijkstra's twice; one normally; one with s: (point, has_edge_g_h_used); compare the results
aspenavenue 	Kattis - aspenavenue 	8.3a, DP level 3 	sort; compute tree positions; s: (l_left, r_left), t: put next tree on the left/right; also available at UVa 11555 - Aspen Avenue
ingestion 	Kattis - ingestion 	8.3a, DP level 3 	s: (hour, consecutive_eating, has_refrain); t: eat at this hour, refrain eating for one or two hours; floating point
mailbox 	Kattis - mailbox 	8.3a, DP level 3 	s: (lo, hi, mailbox_left); try all; also available at UVa 00882 - The Mailbox Manufacturers Problem
coke 	Kattis - coke 	8.3b, DP level 4 	drop parameter n1; recover it from b (number of coke bought), n5, and n10; also available at UVa 10626 - Buying Coke
companypicnic 	Kattis - companypicnic 	8.3b, DP level 4 	s: (name, has_been_matched); DP weighted matching (both cardinality and weight) on Tree
rollercoasterfun 	Kattis - rollercoasterfun 	8.3b, DP level 4 	s: (T); split DPs when b = 0 and when b != 0
countcircuits 	Kattis - countcircuits 	8.3c, Counting Paths, Harder 	s: (id, cur_x, cur_y); t: skip or use this vector; use offset technique to avoid negative indices
favourable 	Kattis - favourable 	8.3c, Counting Paths, Harder 	s: (cur_page); t: jump to one of the 3 sections
pachinkoprobability 	Kattis - pachinkoprobability 	8.3c, Counting Paths, Harder 	s: (pos); DAG modeling; long long
hidingchickens 	Kattis - hidingchickens 	8.3d, DP with Bitmask 	weighted MCM; small complete weighted graph; make fox goes back to the killing spot first after hiding one or two chickens
narrowartgallery 	Kattis - narrowartgallery 	8.3d, DP with Bitmask 	interesting DP; s: (row, state_of_prev_row, k_left)
pebblesolitaire2 	Kattis - pebblesolitaire2 	8.3d, DP with Bitmask 	backtracking suffices for Kattis - pebblesolitair; but this version needs extra memoization
maxflow 	Kattis - maxflow 	8.4a, Network Flow, Standard 	standard max flow problem for practice; print edges used in the max flow
mazemovement 	Kattis - mazemovement 	8.4a, Network Flow, Standard 	use gcd for all pairs of vertices to construct the flow graph; then it is just a standard max flow problem
mincut 	Kattis - mincut 	8.4a, Network Flow, Standard 	standard min cut problem for practice; print vertices reachable from source s after max flow
avoidingtheapocalypse 	Kattis - avoidingtheapocalypse 	8.4b, Network Flow, Variants 	interesting max flow modeling; blow the vertices based on time
thekingofthenorth 	Kattis - thekingofthenorth 	8.4b, Network Flow, Variants 	interesting min cut problem
transportation 	Kattis - transportation 	8.4b, Network Flow, Variants 	max flow with vertex capacities
equalsumseasy 	Kattis - equalsumseasy 	8.6a, NP-hard/C, small, Easier 	PARTITION; generate all possible subsets with bitmask; use set to record which sums have been computed
flowfree 	Kattis - flowfree 	8.6a, NP-hard/C, small, Easier 	brute force combination 3^10 or 4^8; then a bit of LONGEST-PATH problem on non DAG between two end points of the same color
font 	Kattis - font 	8.6a, NP-hard/C, small, Easier 	count number of possible SET-COVERs; use 2^N backtracking; but use bitmask to represent small set of covered letters
socialadvertising 	Kattis - socialadvertising 	8.6a, NP-hard/C, small, Easier 	MIN-SET-COVER; n â‰¤ 20; use compact Adjacency Matrix technique
beanbag 	Kattis - beanbag 	8.6b, NP-hard/C, small, Harder 	SET-COVER problem; T farmers can collude to give Jack the hardest possible subset of beans to be given freely to Jack
coloring 	Kattis - coloring 	8.6b, NP-hard/C, small, Harder 	GRAPH-COLORING; n â‰¤ 11; greedily set vertex 0 to have color 0 to reduce max N to 10; backtracking
programmingteamselection 	Kattis - programmingteamselection 	8.6b, NP-hard/C, small, Harder 	PARTITION-INTO-TRIANGLES; prune if #students % 3 != 0; generate up to m/3 teams; backtracking with memo
bilateral 	Kattis - bilateral 	8.6c, NP-hard/C, special, Easier 	MIN-VERTEX-COVER on Bipartite Graph; MCBM; Konig's theorem that can handle the 1009 case correctly
europeantrip 	Kattis - europeantrip 	8.6c, NP-hard/C, special, Easier 	STEINER-TREE with 3 terminal vertices and up to 1 Steiner point; we can use two ternary searches
reactivity 	Kattis - reactivity 	8.6c, NP-hard/C, special, Easier 	verify if a HAMILTONIAN-PATH exists in the DAG; find one topological sort of the DAG; verify if it is the only one in linear time
jailbreak 	Kattis - jailbreak 	8.6d, NP-hard/C, special, Harder 	STEINER-TREE; on grid; 3 terminal vertices: 'outside' and 2 prisoners; BFS; get the best Steiner point that connects them
ridofcoins 	Kattis - ridofcoins 	8.6d, NP-hard/C, special, Harder 	not the minimizing COIN-CHANGE problem; but the maximizing one; greedy pruning; complete search on much smaller instance
wedding 	Kattis - wedding 	8.6d, NP-hard/C, special, Harder 	can be modeled as a 2-SAT problem; also available at UVa 11294 - Wedding
arrivingontime 	Kattis - arrivingontime 	8.7a, BSTA and Others 	BSTA: the latest starting time; use Dijkstra's to compute whether we can still arrive at meeting point on time
charlesincharge 	Kattis - charlesincharge 	8.7a, BSTA and Others 	BSTA: max edge that Charles can use; SSSP from 1 to $N$ passing through edges that do not exceed that; is it OK?
programmingtutors 	Kattis - programmingtutors 	8.7a, BSTA and Others 	BSTA: smallest K needed to get a perfect matching on Bipartite Graph
wifi 	Kattis - wifi 	8.7a, BSTA and Others 	+greedy; also available at UVa 11516 - WiFi
chesstournament 	Kattis - chesstournament 	8.7b, Efficient DS and Other 	use UFDS to contract vertices that are equals into super vertices; then check if the resulting directed graph is acyclic
magicallights 	Kattis - magicallights 	8.7b, Efficient DS and Other 	LA 7487 - Singapore15; flatten the tree with DFS; use Fenwick Tree for Range Odd Query; use long long
sumsets 	Kattis - sumsets 	8.7b, Efficient DS and Other 	use unordered_map to map sum of a and b in S and their two indices; also available at UVa 10125 - Sumsets
undetected 	Kattis - undetected 	8.7b, Efficient DS and Other 	brute force; simple geometry; use Union Find Disjoint Sets
areyoulistening 	Kattis - areyoulistening 	8.7c, Geometry and Other 	brute force; try all possible answers; circle intersection tests
collidingtraffic 	Kattis - collidingtraffic 	8.7c, Geometry and Other 	try all pairs of boats; 0.0 if one pair collide; or, use a quadratic equation; also available at UVa 11574 - Colliding Traffic
cranes 	Kattis - cranes 	8.7c, Geometry and Other 	circle-circle intersection; backtracking or brute force subsets with bitmask; also available at UVa 11515 - Cranes
humancannonball 	Kattis - humancannonball 	8.7c, Geometry and Other 	build the travel time graph with Euclidean distance computations; use Floyd Warshall's to compute the shortest path
walkway 	Kattis - walkway 	8.7c, Geometry and Other 	we can build the graph and compute area of trapezoid using simple geometry; SSSP on weighted graph; Dijkstra's
crowdcontrol 	Kattis - crowdcontrol 	8.7d, Graph and Other 	maximin path problem; MST; DFS from train station to BAPC; block unused edges
gears2 	Kattis - gears2 	8.7d, Graph and Other 	graph reachability test; cycle with equal ratio is actually OK; math fraction
gridmst 	Kattis - gridmst 	8.7d, Graph and Other 	Singapore15 preliminary; rectilinear MST problem; small 2D grid; multi-sources BFS to construct short edges; Kruskal's to get the final answer
emergency 	Kattis - emergency 	8.7e, Maths and Other 	the problem is posed as an SSSP problem on special graph; but turns out a simple formula solves the problem; Big Integer
industrialspy 	Kattis - industrialspy 	8.7e, Maths and Other 	brute force recursive bitmask with prime check; also available at UVa 12218 - An Industrial Spy
megainversions 	Kattis - megainversions 	8.7e, Maths and Other 	a bit of combinatorics; use Fenwick Tree to compute smaller/larger numbers quickly
ontrack 	Kattis - ontrack 	8.7e, Maths and Other 	DFS on Tree; the input is a tree, we can try all possible junctions as the critical junction
ntnuorienteering 	Kattis - ntnuorienteering 	8.7f, Graph and DP 	get APSP info between campuses; sort lectures by increasing start time; DP O(L^2); try all possible starting lectures
treasurediving 	Kattis - treasurediving 	8.7f, Graph and DP 	SSSP from source and all idol positions; TSP-like but there is a knapsack style parameter 'air_left'; use backtracking
walkforest 	Kattis - walkforest 	8.7f, Graph and DP 	counting paths in DAG; build the DAG; Dijkstra's from 'home'; also available at UVa 10917 - A Walk Through the Forest
centsavings 	Kattis - centsavings 	8.7g, Other and DP 1D RSQ/RMQ 	1D RSQ DP for sum of prices from [i..j]; round up/down; s: (idx, d_left); t: try all positioning of the next divider
dvoniz 	Kattis - dvoniz 	8.7g, Other and DP 1D RSQ/RMQ 	involving 1D RSQ DP; binary search the answer
program 	Kattis - program 	8.7g, Other and DP 1D RSQ/RMQ 	somewhat like Sieve of Eratosthenes initially and 1D RSQ DP speedup at the end
carpool 	Kattis - carpool 	8.7h, Three Components 	Floyd Warshall's/APSP; iterative brute force subset and permutation; DP; also available at UVa 11288 - Carpool
enviousexponents 	Kattis - enviousexponents 	8.7h, Three Components 	mathematical insights; brute force number of bits used; greedily set k bits on
gettingthrough 	Kattis - gettingthrough 	8.7h, Three Components 	BSTA+graph connectivity; Union-Find; similar to UVa 00295
guessthenumbers 	Kattis - guessthenumbers 	8.7h, Three Components 	brute force permute up to 5!; recursive string parsing (simple BNF); also available at UVa 12392 - Guess the Numbers
beavergnaw 	Kattis - beavergnaw 	9.3dge, 3D Geometry 	cones; cylinders; volumes; also available at UVa 10297 - Beavergnaw
bottles 	Kattis - bottles 	9.3dge, 3D Geometry 	LA 6027 - WorldFinals Warsaw12; BSTA+geometric formula; also available at UVa 01280 - Curvy Little Bottles
movingday 	Kattis - movingday 	9.3dge, 3D Geometry 	output volume of the largest 3D box - V
multigram 	Kattis - multigram 	9.anag, Anagram 	brute force lengths that is divisor of the original length of the string; test
delimitersoup 	Kattis - delimitersoup 	9.brac, Bracket Matching 	bracket matching; stack
joggingtrails 	Kattis - joggingtrails 	9.chin, Chinese Postman Problem 	basic Chinese Postman Problem; also available at UVa 10296 - Jogging Trails
closestpair1 	Kattis - closestpair1 	9.clos, Closest Pair Problem 	classic closest pair problem
espressobucks 	Kattis - espressobucks 	9.cons, Construction Problem 	easy brute force construction; small nxm; not about Min-Vertex-Cover
plowking 	Kattis - plowking 	9.cons, Construction Problem 	greedy construction; reverse MST problem
poplava 	Kattis - poplava 	9.cons, Construction Problem 	actually there is a rather simple construction algorithm to achieve the required requirement
batteries 	Kattis - batteries 	9.eggd, Egg Dropping Puzzle 	Egg dropping puzzle with just 2 batteries; special case
powereggs 	Kattis - powereggs 	9.eggd, Egg Dropping Puzzle 	Egg dropping puzzle; similar to UVa 10934
polymul2 	Kattis - polymul2 	9.fast, Fast Fourier Transform 	basic polynomial multiplication problem but requires O(n log n) FFT algorithm; also see Kattis - polymul1 that can be solved with O(n^2) solution
houseofcards 	Kattis - houseofcards 	9.form, Formulas or Theorems 	number of cards for certain height h is h * (3*h + 1) / 2; use Python to handle Big Integer
janitortroubles 	Kattis - janitortroubles 	9.form, Formulas or Theorems 	Brahmagupta's formula
sjecista 	Kattis - sjecista 	9.form, Formulas or Theorems 	number of intersections of diagonals in a convex polygon
pizza 	Kattis - pizza 	9.grad, Gradient Descent 	gradient descent
airlinehub 	Kattis - airlinehub 	9.grea, Great Circle Distance 	gcDistance; also available at UVa 10316 - Airline Hub
guess 	Kattis - guess 	9.inte, Interactive Problem 	interactive problem; binary search; use C++ cout << flush
bread 	Kattis - bread 	9.inve, Inversion Index 	inversion index; hard to derive; this three bread flip operation has special property involving the resulting number of inversions
froshweek 	Kattis - froshweek 	9.inve, Inversion Index 	requires O(n log n) merge sort; 64-bit integer; also available at UVa 11858 - Frosh Week
ultraquicksort 	Kattis - ultraquicksort 	9.inve, Inversion Index 	requires O(n log n) merge sort; also available at UVa 10810 - Ultra Quicksort
eenymeeny 	Kattis - eenymeeny 	9.jose, Josephus Problem 	Josephus problem; small n; just simulate
musicalchairs 	Kattis - musicalchairs 	9.jose, Josephus Problem 	Josephus variant; brute force
grasshopper 	Kattis - grasshopper 	9.knig, Knight Moves 	BFS on implicit Knight jump graph
hidingplaces 	Kattis - hidingplaces 	9.knig, Knight Moves 	SSSP from (r, c); find cells with max distance; print
knightsfen 	Kattis - knightsfen 	9.knig, Knight Moves 	Depth Limited Search (up to 11 moves); also available at UVa 10422 - Knights in FEN
aqueducts 	Kattis - aqueducts 	9.kuhn, Kuhn Munkres's Algorithm 	build bipartite graph; weighted MCBM; Hungarian
engaging 	Kattis - engaging 	9.kuhn, Kuhn Munkres's Algorithm 	LA 8437 - HoChiMinhCity17; we can use Hungarian; print the assignment too
maximumrent 	Kattis - maximumrent 	9.line, Linear Programming 	basic Linear Programming problem with integer output; we can use simplex algorithm or another simpler solution
chewbacca 	Kattis - chewbacca 	9.lowe, Lowest Common Ancestor 	complete short k-ary tree; binary heap indexing; LCA
mincostmaxflow 	Kattis - mincostmaxflow 	9.minc, Min Cost (Max) Flow 	very basic MCMF problem; good starting point
ragingriver 	Kattis - ragingriver 	9.minc, Min Cost (Max) Flow 	MCMF; unit capacity and unit cost
kaleidoscopicpalindromes 	Kattis - kaleidoscopicpalindromes 	9.pala, Palindrome (Checking) 	test all; when you try enlarging k, the answers are actually 'small'
palindromesubstring 	Kattis - palindromesubstring 	9.pala, Palindrome (Checking) 	try all pairs of O(n^2) substrings with at least 2 characters; keep the ones that are palindrome (use DP) in a sorted set
peragrams 	Kattis - peragrams 	9.pala, Palindrome (Checking) 	only one odd frequency character can be in the center of palindrome once; the rest need to have even frequency
names 	Kattis - names 	9.palb, Palindrome (Generating) 	either add a letter to the back or change a letter in the middle; complete search
circuitmath 	Kattis - circuitmath 	9.post, Postfix 	Postfix calculator problem
rimski 	Kattis - rimski 	9.roma, Roman Numerals 	to Roman/to Decimal conversion problem; use next permutation to be sure
cookieselection 	Kattis - cookieselection 	9.sele, Selection Problem 	we can first map large integers to up to 600K integers only; use Fenwick Tree and the select(median) operation of Fenwick Tree
gcpc 	Kattis - gcpc 	9.sele, Selection Problem 	dynamic rank problem; pb_ds helps
sort 	Kattis - sort 	9.sort, Sorting in O(n) 	Counting Sort variant
cardboardcontainer 	Kattis - cardboardcontainer 	9.sqrt, Square Root Decomp 	between L, W, and H, two of them must not be more than sqrt(V), thus we can brute force all L and W in sqrt(V) * sqrt(V) and test if V is divisible by (L*W)
modulodatastructures 	Kattis - modulodatastructures 	9.sqrt, Square Root Decomp 	basic problem that can be solved with Square Root Decomposition technique
